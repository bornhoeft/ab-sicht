;;; ---------------------------------------------------------
;;; Sicht
;;; Copyright Â© 2015-2021 Achim Bornhoeft
;;; ---------------------------------------------------------

;;; Format duration lists (from PWGL) into qlists for PD

#|
(with-open-file (stream 
                 (merge-pathnames 
                  (make-pathname
                   :directory (list :relative 
                                    (format nil "Desktop/qlists/ch~a" ch-no))
                   :name (format nil "cue~a-ch~a" cue-no ch-no) :type "txt")
                  (user-homedir-pathname))
                 :direction :output
                 :if-exists :new-version)
  (format stream  
          (format nil "~{~a ~a~^; ~}~%" timelis)))


;; (format nil "~{~a ~a~^; ~}~%" j)
;; see: http://www.gigamonkeys.com/book/a-few-format-recipes.html

(setf cuefiles
      (loop for i from 1 to 7
        for j in msec-durs
        do
        (with-open-file 
            (stream
             (merge-pathnames
              (make-pathname
               :directory (list :relative "qlists") 
               ;;  subdirectory "qlists" in working directory
               :name (format nil "seq~a-ch~a" 1 i) :type "txt") ;; filenames
              *load-truename*) ;; working directory
             :direction :output ;; write file
             :if-exists :new-version ;; overwrite
             :if-does-not-exist :create) ;; auto-create folders and files       
          (format stream  
                  (format nil  "~{~a text; ~}~%" j)))))
|#

;;; durations (secs) from PWGL for soundscape 1 - roomtone

(defparameter input-durs
  '((-63.375 0.125 -11.125 0.375 -10.375 0.625 -9.625 0.875 -8.833333 1.1666666 -8.0 1.5 -7.25 1.75 -6.375 2.125 -5.5714283 2.4285715 -4.166667 2.8333333 -3.2142856 3.2857144 -1.0 4.0) (-81.375 0.125 -10.166667 0.33333334 -9.428572 0.5714286 -8.75 0.75 -8.0 1.0 -7.25 1.25 -6.5 1.5 -5.25 1.75 -4.375 2.125 -3.0714286 2.4285715 -1.0 3.0) (-85.875 0.125 -9.5 0.5 -8.625 0.875 -7.6666665 1.3333334 -6.75 1.75 -6.25 2.25 -5.25 2.75 -4.214286 3.2857144 -3.0 4.0 -1.0 5.0) (-94.375 0.125 -9.428572 0.5714286 -8.5 1.0 -7.5 1.5 -6.5 2.0 -5.4285717 2.5714286 -4.357143 3.142857 -3.142857 3.857143 -1.0 5.0) (-40.375 0.125 -12.1 0.4 -11.785714 0.71428574 -11.0 1.0 -10.166667 1.3333334 -9.333333 1.6666666 -8.5 2.0 -7.625 2.375 -6.75 2.75 -5.357143 3.142857 -4.4 3.6 -3.357143 4.142857 -1.0 5.0) (-29.875 0.125 -13.166667 0.33333334 -12.428572 0.5714286 -11.7 0.8 -11.0 1.0 -10.25 1.25 -9.5 1.5 -8.75 1.75 -7.5 2.0 -6.714286 2.2857144 -5.9 2.6 -4.5 3.0 -3.125 3.375 -1.0 4.0) (-17.375 0.125 -14.214286 0.2857143 -13.571428 0.42857143 -12.928572 0.5714286 -12.285714 0.71428574 -11.125 0.875 -10.5 1.0 -9.75 1.25 -8.6 1.4 -7.9 1.6 -6.7 1.8 -6.0 2.0 -4.75 2.25 -3.4285715 2.5714286 -1.0 3.0)))

;;; conversions from secs to msecs
(defparameter msec-durs
  (loop for i in input-durs
    collect
    (loop for j in i
      collect (* 1000 j))))

;;; format cuefiles for pure data
(setf cuefiles
      (loop for i from 1 to (length input-durs)
        for j in msec-durs
        do
        (with-open-file 
            (stream
             (merge-pathnames
              (make-pathname
               :directory (list :relative "qlists") 
               ;; subdirectory "qlists" in working directory
               :name (format nil "seq~a-ch~a" 1 i) :type "txt") 
              ;; filenames
              *load-truename*) ;; working directory
             :direction :output ;; write file
             :if-exists :new-version ;; overwrite
             :if-does-not-exist :create) 
          ;; auto-create folders and files
          (loop for k from 0 to (- (length j) 2) by 2
            for r = (nth k j)
            for d = (nth (+ k 1) j)
            for l = (* 0.5 d)
            for n = (+ (abs r) d)
            do
            (format stream
                      (format nil  "~a vl 1 ~a, 0 ~a ~a;~%" n l l l))))))

;;; random durations for cuefiles
(defparameter msec-durs2 
  (gen-eval 6 '(gen-weight 50 '((1940 2) (180 2) (60 4)) :seed 54)))

(setf cuefiles
      (loop for i from 1 to (length msec-durs2)
        for j in msec-durs2
        do
        (with-open-file 
            (stream
             (merge-pathnames
              (make-pathname
               :directory (list :relative "qlists") 
               ;; subdirectory "qlists" in working directory
               :name (format nil "seq~a-ch~a" 1 i) :type "txt") 
              ;; filenames
              *load-truename*) ;; working directory
             :direction :output ;; write file
             :if-exists :new-version ;; overwrite
             :if-does-not-exist :create) 
          ;; auto-create folders and files
          (loop for k in j
            with r = 60
            do
            (format stream
                    (format nil "~a vl 1 ~a, 0 ~a ~a;~%" k r r r))))))

